----------------------------- test session starts -----------------------------
0-add_integer module tests
-----------------------------

----------------------------- function in use -----------------------------
Using add_integer function
-----------------------------

Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Adding 2 and 4
    >>> add_integer(2, 4)
    6

Adding 2.9 and 98
    >>> add_integer(2.9)
    100

Adding an int number and a str
    >>> add_integer(6, "Home")
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Adding a letter and a number
    >>> add_integer('5', 6)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding two letters
    >>> add_integer('4', '2')
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding a number and a list
    >>> add_integer(264, [])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Case Overflow:

    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case NaN:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer